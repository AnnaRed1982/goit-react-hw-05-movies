{"version":3,"file":"static/js/764.9dab1293.chunk.js","mappings":"iOAyEA,UApEe,WAAO,IAAD,EACnB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,SAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRV,EAAU,WACV,IAAMW,EAAU,mCAAG,8GAEQC,EAAAA,EAAAA,IAAiBN,GAFzB,OAETO,EAFS,OAIfX,EAAeW,GACfb,EAAU,YALK,gDAOfA,EAAU,YACVF,EAAS,KAAMgB,SARA,yDAAH,qDAWhBH,GACD,GAAE,CAACL,IAEJ,IAAMS,EAAe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfd,EAAgB,CAAEe,MAAOF,EAAKG,SAASD,MAAME,QAC7CJ,EAAKK,OACN,EAED,MAAe,YAAXxB,GACK,uCAEM,aAAXA,GACK,2DAAmCF,KAE7B,aAAXE,GAEA,iCACE,kBAAMyB,SAAUT,EAAhB,WACE,kBAAOU,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAGF,wBACGxB,EAAY0B,KAAI,SAAAC,GACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMxB,GAAxC,SACGoB,EAAMK,SAFFL,EAAME,GAMlB,UAOP,kBAAMN,SAAUT,EAAhB,WACE,kBAAOU,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,sBAGL,C,+MCpEKS,EAAU,mCACVC,EAAW,+BAEJC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFb,cACzBrB,EADyB,yBAIxBA,EAASyB,KAAKC,SAJU,2CAAH,qDAOjBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,oBACmBP,EADnB,oBADQ,cACzBrB,EADyB,yBAIxBA,EAASyB,MAJe,2CAAH,sDAOjBI,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BAC2BP,EAD3B,oBADK,cACtBrB,EADsB,yBAIrBA,EAASyB,KAAKK,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BAC2BP,EAD3B,2BADQ,cACzBrB,EADyB,yBAIxBA,EAASyB,KAAKC,SAJU,2CAAH,sDAOjB3B,EAAgB,mCAAG,WAAMQ,GAAN,uFACPiB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,wCACsDd,IAF/C,cACxBP,EADwB,yBAIvBA,EAASyB,KAAKC,SAJS,2CAAH,sDAO7BC,EAAkBK,UAAY,CAC5BJ,QAASI,IAAAA,QAEXH,EAAeG,UAAY,CACzBJ,QAASI,IAAAA,QAEXD,EAAkBC,UAAY,CAC5BJ,QAASI,IAAAA,QAEXjC,EAAiBiC,UAAY,CAC3BzB,MAAOyB,IAAAA,O","sources":["pages/Movies.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMovieSearch } from 'services/api';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('start');\n  const [movieSearch, setMovieSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n    const fetchMovie = async () => {\n      try {\n        const response = await fetchMovieSearch(movieName);\n\n        setMovieSearch(response);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n    fetchMovie();\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  if (status === 'pending') {\n    return <h2>Loading...</h2>;\n  }\n  if (status === 'rejected') {\n    return <h2>Whoops, something went wrong: {error}</h2>;\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"query\" />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <ul>\n          {movieSearch.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '7b4917c1c89b56950d6ac1f3ef5382d2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return response.data.results;\n};\n\nfetchMovieDetails.PropTypes = {\n  movieId: PropTypes.string,\n}\nfetchMovieCast.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieReviews.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieSearch.PropTypes = {\n  query: PropTypes.string,\n};"],"names":["useState","error","setError","status","setStatus","movieSearch","setMovieSearch","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchMovie","fetchMovieSearch","response","message","handleSubmit","e","preventDefault","form","currentTarget","query","elements","value","reset","onSubmit","type","name","map","movie","to","id","state","from","title","API_KEY","BASE_URL","fetchPopularMovie","axios","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","PropTypes"],"sourceRoot":""}